{"version":3,"file":"material-chips.umd.js","sources":["../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../../src/material/chips/chip.ts","../../../../../../src/material/chips/chip-default-options.ts","../../../../../../src/material/chips/chip-list.ts","../../../../../../src/material/chips/chip-input.ts","../../../../../../src/material/chips/chips-module.ts","../../../../../../src/material/chips/public-api.ts","../../../../../../src/material/chips/index.ts"],"names":["mixinTabIndex","mixinColor","mixinDisableRipple","Directive","Subject","EventEmitter","RippleRenderer","coerceBooleanProperty","DELETE","BACKSPACE","SPACE","take","ElementRef","NgZone","Platform","Optional","Inject","MAT_RIPPLE_GLOBAL_OPTIONS","ANIMATION_MODULE_TYPE","ChangeDetectorRef","Attribute","DOCUMENT","ContentChild","forwardRef","Input","Output","InjectionToken","mixinErrorState","merge","FocusKeyManager","takeUntil","startWith","SelectionModel","HOME","END","Component","MatFormFieldControl","ViewEncapsulation","ChangeDetectionStrategy","Directionality","NgForm","FormGroupDirective","ErrorStateMatcher","NgControl","Self","ContentChildren","nextUniqueId","TAB","hasModifierKey","ENTER","NgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {BACKSPACE, DELETE, SPACE} from '@angular/cdk/keycodes';\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ChangeDetectorRef,\n  Attribute,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinTabIndex,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisableRipple,\n  RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Represents an event fired on an individual `mat-chip`. */\nexport interface MatChipEvent {\n  /** The chip the event was fired on. */\n  chip: MatChip;\n}\n\n/** Event object emitted by MatChip when selected or deselected. */\nexport class MatChipSelectionChange {\n  constructor(\n    /** Reference to the chip that emitted the event. */\n    public source: MatChip,\n    /** Whether the chip that emitted the event is selected. */\n    public selected: boolean,\n    /** Whether the selection change was a result of a user interaction. */\n    public isUserInput = false) { }\n}\n\n\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n  disabled: boolean;\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatChipMixinBase: CanColorCtor & CanDisableRippleCtor &\n    HasTabIndexCtor & typeof MatChipBase =\n      mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-avatar, [matChipAvatar]',\n  host: {'class': 'mat-chip-avatar'}\n})\nexport class MatChipAvatar {}\n\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n  host: {'class': 'mat-chip-trailing-icon'}\n})\nexport class MatChipTrailingIcon {}\n\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\n@Directive({\n  selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n  inputs: ['color', 'disableRipple', 'tabIndex'],\n  exportAs: 'matChip',\n  host: {\n    'class': 'mat-chip mat-focus-indicator',\n    '[attr.tabindex]': 'disabled ? null : tabIndex',\n    'role': 'option',\n    '[class.mat-chip-selected]': 'selected',\n    '[class.mat-chip-with-avatar]': 'avatar',\n    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n    '[class.mat-chip-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationsDisabled',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-selected]': 'ariaSelected',\n    '(click)': '_handleClick($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n  },\n})\nexport class MatChip extends _MatChipMixinBase implements FocusableOption, OnDestroy, CanColor,\n  CanDisableRipple, RippleTarget, HasTabIndex {\n\n  /** Reference to the RippleRenderer for the chip. */\n  private _chipRipple: RippleRenderer;\n\n  /**\n   * Reference to the element that acts as the chip's ripple target. This element is\n   * dynamically added as a child node of the chip. The chip itself cannot be used as the\n   * ripple target because it must be the host of the focus indicator.\n   */\n  private _chipRippleTarget: HTMLElement;\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the chip ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n  }\n\n  /** Whether the chip has focus. */\n  _hasFocus: boolean = false;\n\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled: boolean;\n\n  /** Whether the chip list is selectable */\n  chipListSelectable: boolean = true;\n\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple: boolean = false;\n\n  /** Whether the chip list as a whole is disabled. */\n  _chipListDisabled: boolean = false;\n\n  /** The chip avatar */\n  @ContentChild(MatChipAvatar) avatar: MatChipAvatar;\n\n  /** The chip's trailing icon. */\n  @ContentChild(MatChipTrailingIcon) trailingIcon: MatChipTrailingIcon;\n\n  /** The chip's remove toggler. */\n  @ContentChild(forwardRef(() => MatChipRemove)) removeIcon: MatChipRemove;\n\n  /** Whether the chip is selected. */\n  @Input()\n  get selected(): boolean { return this._selected; }\n  set selected(value: boolean) {\n    const coercedValue = coerceBooleanProperty(value);\n\n    if (coercedValue !== this._selected) {\n      this._selected = coercedValue;\n      this._dispatchSelectionChange();\n    }\n  }\n  protected _selected: boolean = false;\n\n  /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n  @Input()\n  get value(): any {\n    return this._value !== undefined\n      ? this._value\n      : this._elementRef.nativeElement.textContent;\n  }\n  set value(value: any) { this._value = value; }\n  protected _value: any;\n\n  /**\n   * Whether or not the chip is selectable. When a chip is not selectable,\n   * changes to its selected state are always ignored. By default a chip is\n   * selectable, and it becomes non-selectable if its parent chip list is\n   * not selectable.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable && this.chipListSelectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n  }\n  protected _selectable: boolean = true;\n\n  /** Whether the chip is disabled. */\n  @Input()\n  get disabled(): boolean { return this._chipListDisabled || this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  protected _disabled: boolean = false;\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  @Input()\n  get removable(): boolean { return this._removable; }\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  protected _removable: boolean = true;\n\n  /** Emits when the chip is focused. */\n  readonly _onFocus = new Subject<MatChipEvent>();\n\n  /** Emits when the chip is blured. */\n  readonly _onBlur = new Subject<MatChipEvent>();\n\n  /** Emitted when the chip is selected or deselected. */\n  @Output() readonly selectionChange: EventEmitter<MatChipSelectionChange> =\n      new EventEmitter<MatChipSelectionChange>();\n\n  /** Emitted when the chip is destroyed. */\n  @Output() readonly destroyed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** Emitted when a chip is to be removed. */\n  @Output() readonly removed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** The ARIA selected applied to the chip. */\n  get ariaSelected(): string | null {\n    // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n    // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n    return this.selectable && (this._chipListMultiple || this.selected) ?\n        this.selected.toString() : null;\n  }\n\n  constructor(public _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS)\n              globalRippleOptions: RippleGlobalOptions | null,\n              // @breaking-change 8.0.0 `animationMode` parameter to become required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string,\n              // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.\n              private _changeDetectorRef?: ChangeDetectorRef,\n              @Attribute('tabindex') tabIndex?: string,\n              // @breaking-change 11.0.0 `_document` parameter to become required.\n              @Optional() @Inject(DOCUMENT) _document?: any) {\n    super(_elementRef);\n\n    this._addHostClassName();\n\n    // Dynamically create the ripple target, append it within the chip, and use it as the\n    // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n    // the proper styles.\n    this._chipRippleTarget = (_document || document).createElement('div');\n    this._chipRippleTarget.classList.add('mat-chip-ripple');\n    this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n    this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n    this._chipRipple.setupTriggerEvents(_elementRef);\n\n    this.rippleConfig = globalRippleOptions || {};\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n  }\n\n  _addHostClassName() {\n    const basicChipAttrName = 'mat-basic-chip';\n    const element = this._elementRef.nativeElement as HTMLElement;\n\n    if (element.hasAttribute(basicChipAttrName) ||\n        element.tagName.toLowerCase() === basicChipAttrName) {\n      element.classList.add(basicChipAttrName);\n      return;\n    } else {\n      element.classList.add('mat-standard-chip');\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed.emit({chip: this});\n    this._chipRipple._removeTriggerEvents();\n  }\n\n  /** Selects the chip. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange();\n      this._markForCheck();\n    }\n  }\n\n  /** Deselects the chip. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._dispatchSelectionChange();\n      this._markForCheck();\n    }\n  }\n\n  /** Select this chip and emit selected event */\n  selectViaInteraction(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange(true);\n      this._markForCheck();\n    }\n  }\n\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput: boolean = false): boolean {\n    this._selected = !this.selected;\n    this._dispatchSelectionChange(isUserInput);\n    this._markForCheck();\n    return this.selected;\n  }\n\n  /** Allows for programmatic focusing of the chip. */\n  focus(): void {\n    if (!this._hasFocus) {\n      this._elementRef.nativeElement.focus();\n      this._onFocus.next({chip: this});\n    }\n    this._hasFocus = true;\n  }\n\n  /**\n   * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n   * BACKSPACE keys are pressed.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove(): void {\n    if (this.removable) {\n      this.removed.emit({chip: this});\n    }\n  }\n\n  /** Handles click events on the chip. */\n  _handleClick(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n    } else {\n      event.stopPropagation();\n    }\n  }\n\n  /** Handle custom key presses. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        // If we are removable, remove the focused chip\n        this.remove();\n        // Always prevent so page navigation does not occur\n        event.preventDefault();\n        break;\n      case SPACE:\n        // If we are selectable, toggle the focused chip\n        if (this.selectable) {\n          this.toggleSelected(true);\n        }\n\n        // Always prevent space from scrolling the page since the list has focus\n        event.preventDefault();\n        break;\n    }\n  }\n\n  _blur(): void {\n    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n    // that moves focus not the next item. To work around the issue, we defer marking the chip\n    // as not focused until the next time the zone stabilizes.\n    this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1))\n      .subscribe(() => {\n        this._ngZone.run(() => {\n          this._hasFocus = false;\n          this._onBlur.next({chip: this});\n        });\n      });\n  }\n\n  private _dispatchSelectionChange(isUserInput = false) {\n    this.selectionChange.emit({\n      source: this,\n      isUserInput,\n      selected: this._selected\n    });\n  }\n\n  private _markForCheck() {\n    // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  static ngAcceptInputType_selected: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n  static ngAcceptInputType_removable: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\n@Directive({\n  selector: '[matChipRemove]',\n  host: {\n    'class': 'mat-chip-remove mat-chip-trailing-icon',\n    '(click)': '_handleClick($event)',\n  }\n})\nexport class MatChipRemove {\n  constructor(\n    protected _parentChip: MatChip,\n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef?: ElementRef<HTMLElement>) {\n\n      // @breaking-change 11.0.0 Remove null check for `elementRef`.\n    if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n      elementRef.nativeElement.setAttribute('type', 'button');\n    }\n   }\n\n  /** Calls the parent chip's public `remove()` method if applicable. */\n  _handleClick(event: Event): void {\n    const parentChip = this._parentChip;\n\n    if (parentChip.removable && !parentChip.disabled) {\n      parentChip.remove();\n    }\n\n    // We need to stop event propagation because otherwise the event will bubble up to the\n    // form field and cause the `onContainerClick` method to be invoked. This method would then\n    // reset the focused chip that has been focused after chip removal. Usually the parent\n    // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n    // that the chip is being removed before the event bubbles up.\n    event.stopPropagation();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** Default options, for the chips module, that can be overridden. */\nexport interface MatChipsDefaultOptions {\n  /** The list of key codes that will trigger a chipEnd event. */\n  separatorKeyCodes: number[] | Set<number>;\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const MAT_CHIPS_DEFAULT_OPTIONS =\n    new InjectionToken<MatChipsDefaultOptions>('mat-chips-default-options');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BACKSPACE, END, HOME} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  mixinErrorState,\n} from '@angular/material/core';\nimport {MatFormFieldControl} from '@angular/material/form-field';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\nimport {MatChip, MatChipEvent, MatChipSelectionChange} from './chip';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nconst _MatChipListMixinBase: CanUpdateErrorStateCtor & typeof MatChipListBase =\n    mixinErrorState(MatChipListBase);\n\n\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the chip list value has changed. */\nexport class MatChipListChange {\n  constructor(\n    /** Chip list that emitted the event. */\n    public source: MatChipList,\n    /** Value of the chip list when the event was emitted. */\n    public value: any) { }\n}\n\n\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\n@Component({\n  selector: 'mat-chip-list',\n  template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n  exportAs: 'matChipList',\n  host: {\n    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-required]': 'role ? required : null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[attr.role]': 'role',\n    '[class.mat-chip-list-disabled]': 'disabled',\n    '[class.mat-chip-list-invalid]': 'errorState',\n    '[class.mat-chip-list-required]': 'required',\n    '[attr.aria-orientation]': 'ariaOrientation',\n    'class': 'mat-chip-list',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n    '(keydown)': '_keydown($event)',\n    '[id]': '_uid',\n  },\n  providers: [{provide: MatFormFieldControl, useExisting: MatChipList}],\n  styleUrls: ['chips.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatChipList extends _MatChipListMixinBase implements MatFormFieldControl<any>,\n  ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  readonly controlType: string = 'mat-chip-list';\n\n  /**\n   * When a chip is destroyed, we store the index of the destroyed chip until the chips\n   * query list notifies about the update. This is necessary because we cannot determine an\n   * appropriate chip that should receive focus until the array of chips updated completely.\n   */\n  private _lastDestroyedChipIndex: number | null = null;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** Subscription to focus changes in the chips. */\n  private _chipFocusSubscription: Subscription | null;\n\n  /** Subscription to blur changes in the chips. */\n  private _chipBlurSubscription: Subscription | null;\n\n  /** Subscription to selection changes in chips. */\n  private _chipSelectionSubscription: Subscription | null;\n\n  /** Subscription to remove changes in chips. */\n  private _chipRemoveSubscription: Subscription | null;\n\n  /** The chip input to add more chips */\n  protected _chipInput: MatChipTextControl;\n\n  /** Uid of the chip list */\n  _uid: string = `mat-chip-list-${nextUniqueId++}`;\n\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n\n  /**\n   * User defined tab index.\n   * When it is not null, use user defined tab index. Otherwise use _tabIndex\n   */\n  _userTabIndex: number | null = null;\n\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<MatChip>;\n\n  /** Function when touched */\n  _onTouched = () => {};\n\n  /** Function when changed */\n  _onChange: (value: any) => void = () => {};\n\n  _selectionModel: SelectionModel<MatChip>;\n\n  /** The array of selected chips inside chip list. */\n  get selected(): MatChip[] | MatChip {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The ARIA role applied to the chip list. */\n  get role(): string | null { return this.empty ? null : 'listbox'; }\n\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /** Whether the user should be allowed to select multiple chips. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  private _multiple: boolean = false;\n\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith(): (o1: any, o2: any) => boolean { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  protected _value: any;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id(): string {\n    return this._chipInput ? this._chipInput.id : this._uid;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  protected _required: boolean = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get placeholder(): string {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  protected _placeholder: string;\n\n  /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n  get focused(): boolean {\n    return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean { return !this.empty || this.focused; }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  protected _disabled: boolean = false;\n\n  /** Orientation of the chip list. */\n  @Input('aria-orientation') ariaOrientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Whether or not this chip list is selectable. When a chip list is not selectable,\n   * the selected states for all the chips inside the chip list are always ignored.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n\n    if (this.chips) {\n      this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n    }\n  }\n  protected _selectable: boolean = true;\n\n  @Input()\n  set tabIndex(value: number) {\n    this._userTabIndex = value;\n    this._tabIndex = value;\n  }\n\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges(): Observable<MatChipSelectionChange> {\n    return merge(...this.chips.map(chip => chip.selectionChange));\n  }\n\n  /** Combined stream of all of the child chips' focus change events. */\n  get chipFocusChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onFocus));\n  }\n\n  /** Combined stream of all of the child chips' blur change events. */\n  get chipBlurChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onBlur));\n  }\n\n  /** Combined stream of all of the child chips' remove change events. */\n  get chipRemoveChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip.destroyed));\n  }\n\n  /** Event emitted when the selected chip list value has been changed by the user. */\n  @Output() readonly change: EventEmitter<MatChipListChange> =\n      new EventEmitter<MatChipListChange>();\n\n  /**\n   * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The chip components contained within this chip list. */\n  @ContentChildren(MatChip, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true\n  }) chips: QueryList<MatChip>;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Optional() _parentForm: NgForm,\n              @Optional() _parentFormGroup: FormGroupDirective,\n              _defaultErrorStateMatcher: ErrorStateMatcher,\n              /** @docs-private */\n              @Optional() @Self() public ngControl: NgControl) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatChip>(this.chips)\n      .withWrap()\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n\n    if (this._dir) {\n      this._dir.change\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n    }\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._allowFocusEscape();\n    });\n\n    // When the list changes, re-subscribe\n    this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => {\n          this._syncChipsState();\n        });\n      }\n\n      this._resetChips();\n\n      // Reset chips selected/deselected status\n      this._initializeSelection();\n\n      // Check to see if we need to update our tab index\n      this._updateTabIndex();\n\n      // Check to see if we have a destroyed chip and need to refocus\n      this._updateFocusForDestroyedChips();\n\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatChip>(this.multiple, undefined, false);\n    this.stateChanges.next();\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n\n      if (this.ngControl.disabled !== this._disabled) {\n        this.disabled = !!this.ngControl.disabled;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.stateChanges.complete();\n\n    this._dropSubscriptions();\n  }\n\n\n  /** Associates an HTML input element with this chip list. */\n  registerInput(inputElement: MatChipTextControl): void {\n    this._chipInput = inputElement;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) { this._ariaDescribedby = ids.join(' '); }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    if (this.chips) {\n      this._setSelectionByValue(value, false);\n    }\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event: MouseEvent) {\n    if (!this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n    // Focus on first element if there's no chipInput inside chip-list\n    if (this._chipInput && this._chipInput.focused) {\n      // do nothing\n    } else if (this.chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n      this.stateChanges.next();\n    } else {\n      this._focusInput(options);\n      this.stateChanges.next();\n    }\n  }\n\n  /** Attempt to focus an input if we have one. */\n  _focusInput(options?: FocusOptions) {\n    if (this._chipInput) {\n      this._chipInput.focus(options);\n    }\n  }\n\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keydown(event: KeyboardEvent) {\n    const target = event.target as HTMLElement;\n\n    // If they are on an empty input and hit backspace, focus the last chip\n    if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n    } else if (target && target.classList.contains('mat-chip')) {\n      if (event.keyCode === HOME) {\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n      } else if (event.keyCode === END) {\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n      } else {\n        this._keyManager.onKeydown(event);\n      }\n\n      this.stateChanges.next();\n    }\n  }\n\n\n  /**\n   * Check the tab index as you should not be allowed to focus an empty list.\n   */\n  protected _updateTabIndex(): void {\n    // If we have 0 chips, we should not allow keyboard focus\n    this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n  }\n\n  /**\n   * If the amount of chips changed, we need to update the\n   * key manager state and focus the next closest chip.\n   */\n  protected _updateFocusForDestroyedChips() {\n    // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n    if (this._lastDestroyedChipIndex != null) {\n      if (this.chips.length) {\n        const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n        this._keyManager.setActiveItem(newChipIndex);\n      } else {\n        this.focus();\n      }\n    }\n\n    this._lastDestroyedChipIndex = null;\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  private _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n\n  private _isInputEmpty(element: HTMLElement): boolean {\n    if (element && element.nodeName.toLowerCase() === 'input') {\n      let input = element as HTMLInputElement;\n      return !input.value;\n    }\n\n    return false;\n  }\n\n  _setSelectionByValue(value: any, isUserInput: boolean = true) {\n    this._clearSelection();\n    this.chips.forEach(chip => chip.deselect());\n\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      const correspondingChip = this._selectValue(value, isUserInput);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what chip the user interacted with last.\n      if (correspondingChip) {\n        if (isUserInput) {\n          this._keyManager.setActiveItem(correspondingChip);\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  private _selectValue(value: any, isUserInput: boolean = true): MatChip | undefined {\n\n    const correspondingChip = this.chips.find(chip => {\n      return chip.value != null && this._compareWith(chip.value,  value);\n    });\n\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n      this._selectionModel.select(correspondingChip);\n    }\n\n    return correspondingChip;\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl || this._value) {\n        this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n        this.stateChanges.next();\n      }\n    });\n  }\n\n  /**\n   * Deselects every chip in the list.\n   * @param skip Chip that should not be deselected.\n   */\n  private _clearSelection(skip?: MatChip): void {\n    this._selectionModel.clear();\n    this.chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n    this.stateChanges.next();\n  }\n\n  /**\n   * Sorts the model values, ensuring that they keep the same\n   * order that they have in the panel.\n   */\n  private _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.chips.forEach(chip => {\n        if (chip.selected) {\n          this._selectionModel.select(chip);\n        }\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** When blurred, mark the field as touched when focus moved outside the chip list. */\n  _blur() {\n    if (!this._hasFocusedChip()) {\n      this._keyManager.setActiveItem(-1);\n    }\n\n    if (!this.disabled) {\n      if (this._chipInput) {\n        // If there's a chip input, we should check whether the focus moved to chip input.\n        // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n        // to chip input, do nothing.\n        // Timeout is needed to wait for the focus() event trigger on chip input.\n        setTimeout(() => {\n          if (!this.focused) {\n            this._markAsTouched();\n          }\n        });\n      } else {\n        // If there's no chip input, then mark the field as touched.\n        this._markAsTouched();\n      }\n    }\n  }\n\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /**\n   * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the list from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this._tabIndex !== -1) {\n      this._tabIndex = -1;\n\n      setTimeout(() => {\n        this._tabIndex = this._userTabIndex || 0;\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private _resetChips() {\n    this._dropSubscriptions();\n    this._listenToChipsFocus();\n    this._listenToChipsSelection();\n    this._listenToChipsRemoved();\n  }\n\n  private _dropSubscriptions() {\n    if (this._chipFocusSubscription) {\n      this._chipFocusSubscription.unsubscribe();\n      this._chipFocusSubscription = null;\n    }\n\n    if (this._chipBlurSubscription) {\n      this._chipBlurSubscription.unsubscribe();\n      this._chipBlurSubscription = null;\n    }\n\n    if (this._chipSelectionSubscription) {\n      this._chipSelectionSubscription.unsubscribe();\n      this._chipSelectionSubscription = null;\n    }\n\n    if (this._chipRemoveSubscription) {\n      this._chipRemoveSubscription.unsubscribe();\n      this._chipRemoveSubscription = null;\n    }\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsSelection(): void {\n    this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n      event.source.selected\n        ? this._selectionModel.select(event.source)\n        : this._selectionModel.deselect(event.source);\n\n      // For single selection chip list, make sure the deselected value is unselected.\n      if (!this.multiple) {\n        this.chips.forEach(chip => {\n          if (!this._selectionModel.isSelected(chip) && chip.selected) {\n            chip.deselect();\n          }\n        });\n      }\n\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsFocus(): void {\n    this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n      let chipIndex: number = this.chips.toArray().indexOf(event.chip);\n\n      if (this._isValidIndex(chipIndex)) {\n        this._keyManager.updateActiveItem(chipIndex);\n      }\n      this.stateChanges.next();\n    });\n\n    this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n  }\n\n  private _listenToChipsRemoved(): void {\n    this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n      const chip = event.chip;\n      const chipIndex = this.chips.toArray().indexOf(event.chip);\n\n      // In case the chip that will be removed is currently focused, we temporarily store\n      // the index in order to be able to determine an appropriate sibling chip that will\n      // receive focus.\n      if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n        this._lastDestroyedChipIndex = chipIndex;\n      }\n    });\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  private _originatesFromChip(event: Event): boolean {\n    let currentElement = event.target as HTMLElement | null;\n\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n\n  /** Checks whether any of the chips is focused. */\n  private _hasFocusedChip() {\n    return this.chips.some(chip => chip._hasFocus);\n  }\n\n  /** Syncs the list's state with the individual chips. */\n  private _syncChipsState() {\n    if (this.chips) {\n      this.chips.forEach(chip => {\n        chip._chipListDisabled = this._disabled;\n        chip._chipListMultiple = this.multiple;\n      });\n    }\n  }\n\n  static ngAcceptInputType_multiple: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, ElementRef, EventEmitter, Inject, Input, OnChanges, Output} from '@angular/core';\nimport {hasModifierKey, TAB} from '@angular/cdk/keycodes';\nimport {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';\nimport {MatChipList} from './chip-list';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n/** Represents an input event on a `matChipInput`. */\nexport interface MatChipInputEvent {\n  /** The native `<input>` element that the event is being fired for. */\n  input: HTMLInputElement;\n\n  /** The value of the input. */\n  value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\n@Directive({\n  selector: 'input[matChipInputFor]',\n  exportAs: 'matChipInput, matChipInputFor',\n  host: {\n    'class': 'mat-chip-input mat-input-element',\n    '(keydown)': '_keydown($event)',\n    '(blur)': '_blur()',\n    '(focus)': '_focus()',\n    '(input)': '_onInput()',\n    '[id]': 'id',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.placeholder]': 'placeholder || null',\n    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n    '[attr.aria-required]': '_chipList && _chipList.required || null',\n  }\n})\nexport class MatChipInput implements MatChipTextControl, OnChanges {\n  /** Whether the control is focused. */\n  focused: boolean = false;\n  _chipList: MatChipList;\n\n  /** Register input for chip list */\n  @Input('matChipInputFor')\n  set chipList(value: MatChipList) {\n    if (value) {\n      this._chipList = value;\n      this._chipList.registerInput(this);\n    }\n  }\n\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  @Input('matChipInputAddOnBlur')\n  get addOnBlur(): boolean { return this._addOnBlur; }\n  set addOnBlur(value: boolean) { this._addOnBlur = coerceBooleanProperty(value); }\n  _addOnBlur: boolean = false;\n\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  @Input('matChipInputSeparatorKeyCodes')\n  separatorKeyCodes: number[] | Set<number> = this._defaultOptions.separatorKeyCodes;\n\n  /** Emitted when a chip is to be added. */\n  @Output('matChipInputTokenEnd')\n  chipEnd: EventEmitter<MatChipInputEvent> = new EventEmitter<MatChipInputEvent>();\n\n  /** The input's placeholder text. */\n  @Input() placeholder: string = '';\n\n  /** Unique id for the input. */\n  @Input() id: string = `mat-chip-list-input-${nextUniqueId++}`;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled || (this._chipList && this._chipList.disabled); }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  /** Whether the input is empty. */\n  get empty(): boolean { return !this._inputElement.value; }\n\n  /** The native input element to which this directive is attached. */\n  protected _inputElement: HTMLInputElement;\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLInputElement>,\n    @Inject(MAT_CHIPS_DEFAULT_OPTIONS) private _defaultOptions: MatChipsDefaultOptions) {\n    this._inputElement = this._elementRef.nativeElement as HTMLInputElement;\n  }\n\n  ngOnChanges() {\n    this._chipList.stateChanges.next();\n  }\n\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event?: KeyboardEvent) {\n    // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n    // want to do this when going backwards, because focus should go back to the first chip.\n    if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n      this._chipList._allowFocusEscape();\n    }\n\n    this._emitChipEnd(event);\n  }\n\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipList.focused) {\n      this._chipList._blur();\n    }\n    this._chipList.stateChanges.next();\n  }\n\n  _focus() {\n    this.focused = true;\n    this._chipList.stateChanges.next();\n  }\n\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event?: KeyboardEvent) {\n    if (!this._inputElement.value && !!event) {\n      this._chipList._keydown(event);\n    }\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipList.stateChanges.next();\n  }\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this._inputElement.focus(options);\n  }\n\n  /** Checks whether a keycode is one of the configured separators. */\n  private _isSeparatorKey(event: KeyboardEvent) {\n    if (hasModifierKey(event)) {\n      return false;\n    }\n\n    const separators = this.separatorKeyCodes;\n    const keyCode = event.keyCode;\n    return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n  }\n\n  static ngAcceptInputType_addOnBlur: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ENTER} from '@angular/cdk/keycodes';\nimport {NgModule} from '@angular/core';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatChip, MatChipAvatar, MatChipRemove, MatChipTrailingIcon} from './chip';\nimport {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';\nimport {MatChipInput} from './chip-input';\nimport {MatChipList} from './chip-list';\n\nconst CHIP_DECLARATIONS = [\n  MatChipList,\n  MatChip,\n  MatChipInput,\n  MatChipRemove,\n  MatChipAvatar,\n  MatChipTrailingIcon,\n];\n\n@NgModule({\n  exports: CHIP_DECLARATIONS,\n  declarations: CHIP_DECLARATIONS,\n  providers: [\n    ErrorStateMatcher,\n    {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      } as MatChipsDefaultOptions\n    }\n  ]\n})\nexport class MatChipsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './chips-module';\nexport * from './chip-list';\nexport * from './chip';\nexport * from './chip-input';\nexport * from './chip-default-options';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}